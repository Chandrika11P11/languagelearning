{"version":3,"sources":["../../../../../../../DTX/Print outs/1Productivity Finances ZIRLEN Career Path/SKILLS/3BUILD PROJECTS USING THE CHOOSEN SKILL/3D WEB GAME ANIMATION PATH/Apps/learnlanguages/src/English/mini apps/chatbot/right.png","../../../../../../../DTX/Print outs/1Productivity Finances ZIRLEN Career Path/SKILLS/3BUILD PROJECTS USING THE CHOOSEN SKILL/3D WEB GAME ANIMATION PATH/Apps/learnlanguages/src/English/mini apps/chatbot/left.png","../../../../../../../DTX/Print outs/1Productivity Finances ZIRLEN Career Path/SKILLS/3BUILD PROJECTS USING THE CHOOSEN SKILL/3D WEB GAME ANIMATION PATH/Apps/learnlanguages/src/English/Description.js","../../../../../../../DTX/Print outs/1Productivity Finances ZIRLEN Career Path/SKILLS/3BUILD PROJECTS USING THE CHOOSEN SKILL/3D WEB GAME ANIMATION PATH/Apps/learnlanguages/src/English/EnglishData.js","../../../../../../../DTX/Print outs/1Productivity Finances ZIRLEN Career Path/SKILLS/3BUILD PROJECTS USING THE CHOOSEN SKILL/3D WEB GAME ANIMATION PATH/Apps/learnlanguages/src/English/mini apps/Words.js","../../../../../../../DTX/Print outs/1Productivity Finances ZIRLEN Career Path/SKILLS/3BUILD PROJECTS USING THE CHOOSEN SKILL/3D WEB GAME ANIMATION PATH/Apps/learnlanguages/src/English/mini apps/chatbot/responseData.js","../../../../../../../DTX/Print outs/1Productivity Finances ZIRLEN Career Path/SKILLS/3BUILD PROJECTS USING THE CHOOSEN SKILL/3D WEB GAME ANIMATION PATH/Apps/learnlanguages/src/English/mini apps/chatbot/Response.js","../../../../../../../DTX/Print outs/1Productivity Finances ZIRLEN Career Path/SKILLS/3BUILD PROJECTS USING THE CHOOSEN SKILL/3D WEB GAME ANIMATION PATH/Apps/learnlanguages/src/English/mini apps/chatbot/ChatBot.js","../../../../../../../DTX/Print outs/1Productivity Finances ZIRLEN Career Path/SKILLS/3BUILD PROJECTS USING THE CHOOSEN SKILL/3D WEB GAME ANIMATION PATH/Apps/learnlanguages/src/English/English.js","../../../../../../../DTX/Print outs/1Productivity Finances ZIRLEN Career Path/SKILLS/3BUILD PROJECTS USING THE CHOOSEN SKILL/3D WEB GAME ANIMATION PATH/Apps/learnlanguages/src/App.js","../../../../../../../DTX/Print outs/1Productivity Finances ZIRLEN Career Path/SKILLS/3BUILD PROJECTS USING THE CHOOSEN SKILL/3D WEB GAME ANIMATION PATH/Apps/learnlanguages/src/index.js"],"names":["module","exports","__webpack_require__","p","Description","React","createElement","className","EnglishData","questions","english","telugu","Words","tel","setTel","useState","score","setScore","inputAnswer","setInputAnswer","showResult","setShowResult","console","log","Fragment","length","onClick","onTryAgain","value","onChange","evt","target","onClickNext","userAnswer","toLowerCase","correctAnswer","prev","responseDataset","inputs","kannada","responses","ResponseSpriteWrapper","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","label","_templateObject4","BotResponse","_ref","response","src","left","alt","ChatBot","userInput","setUserInput","language1","setLanguage1","language2","setLanguage2","translations","setTranslations","Container","UserInputSpriteWrapper","right","e","selectedInput","handleUserInput","map","data","index","key","getBotResponse","userInput1","userInput2","matchedData","find","concat","English","NavLink","exact","to","Routes","Route","path","element","App","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.06639551.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/right.6cf6e878.png\";","module.exports = __webpack_public_path__ + \"static/media/left.d1b5b521.png\";","import React from 'react'\r\nimport './Description.css'\r\n\r\nconst Description = () => {\r\n  return (\r\n    <div className='home'>\r\n        <h1>English</h1>\r\n        <p className='para'>Learning made easy and simple...</p>\r\n        <p className='para'>English నేర్చుకోవడం సులభం మరియు తేలిక...</p>\r\n        {/*<ul>            \r\n            <li>? - Instances where I will use question mark</li>\r\n            <li>నువ్వు ఎలా వున్నావు ? - How are you ?</li>\r\n            <ul>\r\n              <li>ఎలా - How</li>\r\n              <li>వున్నావు - are</li>\r\n              <li>నువ్వు - you</li>\r\n            </ul>\r\n            <li>మీకు మరొకరికి మధ్య జరిగే సంభాషణ లో ఎలా ఇంగ్లీష్ లో సులభంగా మాట్లాడాలో నేర్చుకోవచ్చు.</li>\r\n            {/*<li>Sentence Formation Rules and Sentence structure - స్ట్రక్చర్ ఎలా ఫారం అయిందో తెలుగు లో ఎక్సప్లనేషన్.</li>\r\n            <li>మీకు మరొకరికి మధ్య జరిగే సంభాషణ లో ఎలా ఇంగ్లీష్ లో సులభంగా మాట్లాడాలో నేర్చుకోవచ్చు.</li>\r\n        </ul>\r\n             \r\n        <h2>My Plan:</h2>\r\n        <ol>            \r\n        <li>Build fundamental logic flowchart.</li>\r\n            <ol>\r\n                <li>&#9989;Words and sentence Quiz with Score</li>                \r\n                <li>Sentence Formation Rules and Sentence structure Quiz with Score</li>\r\n                <li>&#9989;Sprite Conversation Quiz with Score</li>\r\n            </ol> \r\n            <li>Create one database file to be used in all apps for Telugu and English - words, phrases, punctuation marks, sentence formation rules and sentence structure.</li>\r\n            <ul>\r\n                <li>Later I have plans to add Kannada - words, phrases, punctuation marks, sentence formation rules and sentence structure without having to create additional telugu to kannada database separately . I am gonna create a dropdown menu to switch between English and Kannada.</li>\r\n                <li>If want to create any non-indian language learning apps for me personally. I am using same english database for learning Latin, German, Russian etc..</li>\r\n            </ul>                       \r\n        </ol>*/}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Description","export const EnglishData ={\r\n    questions: [\r\n    {\r\n        english: \"How\",\r\n        telugu: \"ఎలా\"\r\n      },\r\n      {\r\n        english: \"are\",\r\n        telugu: \"ఉన్నాయి\"\r\n      },\r\n      {\r\n        english: \"you\",\r\n        telugu: \"మీరు\"\r\n      },\r\n      {\r\n        english: \"How are you ?\",\r\n        telugu: \"మీరు ఎలా ఉన్నారు ?\"\r\n      },\r\n      {\r\n        english: \"Who is\",\r\n        telugu: \"ఎవరు\"\r\n      },\r\n      {\r\n        english: \"that man\",\r\n        telugu: \"ఆ వ్యక్తి\"\r\n      },\r\n      {\r\n        english: \"Who is that man ?\",\r\n        telugu: \"ఎవరు అతను ?\"\r\n      },\r\n      {\r\n        english: \"Where \",\r\n        telugu: \"ఎక్కడ\"\r\n      },\r\n      {\r\n        english: \"Where do you live ?\",\r\n        telugu: \"మీరు ఎక్కడ నివసిస్తున్నారు ?\"\r\n      },\r\n      {\r\n        english: \"What\",\r\n        telugu: \"ఏమిటి\"\r\n      },\r\n      {\r\n        english: \"What do you eat for breakfast ?\",\r\n        telugu: \"మీరు అల్పాహారంగా ఏమి తింటారు ?\"\r\n      },\r\n      {\r\n        english: \"Good morning\",\r\n        telugu: \"శుభోదయం\"\r\n      },\r\n      {\r\n        english: \"Good afternoon\",\r\n        telugu: \"శుభ మద్యాహ్నం\"\r\n      },\r\n      {\r\n        english: \"My name is supraja\",\r\n        telugu: \"నా పేరు సుప్రజ\"\r\n      },\r\n      {\r\n        english: \"I am studying\",\r\n        telugu: \"నేను చదువుకుంటున్నాను\"\r\n      },\r\n      {\r\n        english: \"I am studying english\",\r\n        telugu: \"నేను ఆంగ్లము చదువుచున్నాను\"\r\n      },\r\n      {\r\n        english: \"I am doing a job\",\r\n        telugu: \"నేను ఉద్యోగం చేస్తున్నాను\"\r\n      },\r\n      {\r\n        english: \"I live in Bangalore\",\r\n        telugu: \"నేను బెంగళూరులో ఉంటున్నాను\"\r\n      },\r\n      {\r\n        english: \"Thank you\",\r\n        telugu: \"ధన్యవాదాలు\"\r\n      },\r\n      {\r\n        english: \"I can speak in english\",\r\n        telugu: \"నేను ఇంగ్లీషులో మాట్లాడగలను\"\r\n      },\r\n   ],\r\n}\r\n\r\nexport default EnglishData;\r\n\r\nexport const resultInitalState = {\r\n    score: 0,\r\n    correctAnswers: 0,\r\n    wrongAnswers: 0,\r\n};\r\n","import React, { useState } from 'react'\r\nimport EnglishData from '../EnglishData.js'\r\nimport './Words.css'\r\n\r\n/*This app checks if the entries in English are right for basic words and the sentences that those basic words form right after the basic words quiz. Final score will be shown after the quiz*/\r\n\r\nconst Words = () => {    \r\n    //Go through the rendered markup and look for the states that needs to be updated\r\n    //States: Telugu word, English word, Score update \r\n\r\n    const [tel, setTel] = useState(0);\r\n    const [score, setScore] = useState(null);\r\n\r\n    const [inputAnswer, setInputAnswer] = useState(\"\");\r\n    const[showResult, setShowResult] = useState(false);\r\n    \r\n    const { telugu, english} = EnglishData.questions[tel];\r\n\r\n    //submit handler, Score increment handler, final score handler, conditional rendering to show final score board\r\n\r\n    const onClickNext = () => {\r\n      \r\n      const userAnswer = inputAnswer.toLowerCase(); // Ignore case for comparison\r\n      const correctAnswer = english.toLowerCase();\r\n      if (userAnswer === correctAnswer) {\r\n        setScore((prev) => prev + 1);\r\n      }else{\r\n        setScore((prev) => prev);\r\n      }\r\n  \r\n      if (tel !== EnglishData.questions.length - 1) {\r\n        setTel((prev) => prev + 1);\r\n      } else {\r\n        setTel(0);\r\n        setShowResult(true);\r\n      }\r\n      \r\n      setInputAnswer(\"\");\r\n    };\r\n    \r\n    console.log(score)\r\n\r\n    const onTryAgain = () => {\r\n      setScore(0);\r\n      setShowResult(false);\r\n      setInputAnswer(\"\");\r\n    };\r\n\r\n    const handleInputChange = (evt) => {\r\n      setInputAnswer(evt.target.value);\r\n    };\r\n\r\n  return (\r\n    <div className=\"words\">\r\n      <div className='container'>\r\n      <h2>Words and Sentences</h2>\r\n        {!showResult ? (\r\n            <>\r\n              <p>ఈ పదానికి English లో అర్ధం ఏంటి ?</p>\r\n              <h3>\"{telugu}\"</h3>\r\n              <p><input value={inputAnswer} onChange={handleInputChange}/></p>\r\n              <button onClick={onClickNext}>{tel === EnglishData.questions.length - 1 ? \"Finish\" : \"Next\"}</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n            <p>Your final score is: {score} out of {EnglishData.questions.length}</p>\r\n            <button onClick={onTryAgain}>Try again</button>\r\n            </>\r\n          )}    \r\n          </div> \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Words\r\n\r\n","// responseData.js\r\nconst responseDataset = [\r\n  {\r\n    inputs: {\r\n      english: 'hello - హలో',\r\n      telugu: 'హలో',\r\n      kannada: 'hola',\r\n    },\r\n    responses: {\r\n      english: 'Hi!',\r\n      telugu: 'హాయ్!',\r\n      kannada: '¡Hola! ¿Cómo puedo ayudarte?',\r\n    },\r\n  },\r\n  {\r\n    inputs: {\r\n      english: 'how are you ? - నువ్వు ఎలా ఉన్నావ్ ?',\r\n      telugu: 'నే',\r\n      kannada: 'ad',\r\n    },\r\n    responses: {\r\n      english: 'I am good',\r\n      telugu: 'నేను బాగున్నాను',\r\n      kannada: '¡Adiós! ¡Que tengas un gran día!',\r\n    },\r\n  },\r\n  {\r\n    inputs: {\r\n      english: 'nk',\r\n      telugu: 'నే',\r\n      kannada: 'ad',\r\n    },\r\n    responses: {\r\n      english: 'I am good',\r\n      telugu: 'నేను బాగున్నాను',\r\n      kannada: '¡Adiós! ¡Que tengas un gran día!',\r\n    },\r\n  },\r\n  // Add more data as needed\r\n];\r\n\r\nexport default responseDataset;\r\n","// BotResponse.js\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport left from './left.png'\r\n\r\nconst ResponseSpriteWrapper = styled.div`\r\nfont-family: Roboto Condensed; \r\n  color: white;\r\n  display: flex;  \r\n  flex-wrap: nowrap;\r\n  flex-direction: column;    \r\n  align-items: left;\r\n  justify-content: left;\r\n  text-align: right;\r\n  border-radius: 0.75rem;\r\n  border: 2px solid darkpurple;\r\n  background: transparent;\r\n  backdrop-filter: blur(50px);\r\n  padding: 10px;\r\n  margin: 20px 50px;\r\n`;\r\nconst SpriteTwoDescription = styled.p`\r\nfont-family: Tiro Telugu;  \r\nposition: absolute;  \r\n  font-size: 12px;\r\n  color: Black;\r\n  margin: 55px 260px;\r\n`;\r\nconst Resp = styled.p`\r\nfont-size: 15px;\r\ndisplay: inline-block;\r\nwidth: 500px;\r\nheight: 80px;\r\nbox-sizing: border-box;\r\noutline: none;\r\nborder: 1px solid lightgray;\r\nborder-radius: 3px;\r\npadding: 10px 10px 10px 100px;\r\ntransition: all 0.1s ease-out;\r\n`\r\n\r\nconst ResponseLabel = styled.label`\r\n   position: absolute;\r\n   top: 0;\r\n   left: 0;\r\n   bottom: 0;\r\n   height: 40px;\r\n   line-height: 40px;\r\n   border-radius: 3px 0 0 3px;\r\n   padding: 0 20px;  \r\n   background: #ffc918;\r\n   font-family: Tiro Telugu;\r\n   color: black;\r\n`;\r\n\r\nconst BotResponse = ({response}) => (\r\n  <ResponseSpriteWrapper>\r\n    <div className='imgleft'><img src={left} alt=''/></div>\r\n    <div className='text-inputtwo'>\r\n    <label>నా స్నేహితులు:</label>\r\n    <p>{response}</p>\r\n    </div>\r\n  </ResponseSpriteWrapper>\r\n);\r\n\r\nexport default BotResponse;\r\n","// ChatBot.js\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport './Conversation.css'\r\nimport right from './right.png'\r\nimport responseDataset from './responseData';\r\nimport BotResponse from './Response';\r\n\r\n\r\n\r\nconst ChatBot = () => {\r\n  const [userInput, setUserInput] = useState('');\r\n  const [language1, setLanguage1] = useState('english'); // Default language 1 is French\r\n  const [language2, setLanguage2] = useState('telugu'); // Default language 2 is Spanish\r\n  const [translations, setTranslations] = useState([]);\r\n\r\n  /*\r\n  const handleUserInput = (e) => {\r\n    setUserInput(e.target.value);\r\n  };*/\r\n\r\n  const handleUserInput = (selectedInput) => {\r\n    setUserInput(selectedInput);\r\n  };\r\n  /*\r\n  const handleSendMessage = (e) => {\r\n    if (userInput.trim() !== '') {\r\n      // Translate user input into both languages\r\n      const translatedInput1 = getTranslatedInput(userInput, language1);\r\n      const translatedInput2 = getTranslatedInput(userInput, language2);\r\n      setUserInput('');\r\n\r\n      // Simulate a bot response based on user input\r\n      const botResponse = getBotResponse(translatedInput1, translatedInput2);\r\n      alert(botResponse); // For simplicity, displaying the response in an alert\r\n\r\n      // Update translations\r\n      updateTranslations(translatedInput1, translatedInput2);\r\n    }\r\n  };*/\r\n\r\n  const getTranslatedInput = (input, language) => {\r\n    const matchedInput = responseDataset.find(\r\n      (data) => input.toLowerCase() === data.inputs[language]\r\n    );\r\n\r\n    return matchedInput ? matchedInput.inputs.english : input;\r\n  };\r\n\r\n  const getBotResponse = (userInput1, userInput2) => {\r\n    // Find a response in the dataset based on user input\r\n    const matchedData = responseDataset.find(\r\n      (data) => userInput1.toLowerCase() === data.inputs.english\r\n    );\r\n\r\n    // Return the response or a default message if no match is found\r\n    if (matchedData) {\r\n      return `${matchedData.responses[language1]} - ${matchedData.responses[language2]}`;\r\n    } else {\r\n      return '...';\r\n    }\r\n  };\r\n\r\n  const updateTranslations = (translatedInput1, translatedInput2) => {\r\n    // Update translations for display\r\n    const updatedTranslations = responseDataset.map((data) => ({\r\n      input: data.inputs.english,\r\n      translation1: data.inputs[language1],\r\n      translation2: data.inputs[language2],\r\n      response: data.responses[language1] || data.responses.english,\r\n    }));\r\n\r\n    setTranslations([...translations, ...updatedTranslations]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <UserInputSpriteWrapper>\r\n      <img src={right} alt=''/> \r\n      <div>\r\n        <label>Select Language 1: </label>\r\n        <select value={language1} onChange={(e) => setLanguage1(e.target.value)}>\r\n          <option value=\"english\">English</option>\r\n          {/* Add more languages as needed */}\r\n        </select>\r\n        <label>Select Language 2: </label>\r\n        <select value={language2} onChange={(e) => setLanguage2(e.target.value)}>\r\n         <option value=\"telugu\">Telugu</option>\r\n          {/* Add more languages as needed */}\r\n        </select>\r\n      </div>\r\n      <div className='text-input'>\r\n       {/*} <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={handleUserInput}\r\n          onKeyDown={handleSendMessage}\r\n          placeholder=\"Type your message...\"\r\n        />*/}\r\n        <label>నేను:</label>\r\n        <select onChange={(e) => handleUserInput(e.target.value)}>\r\n          {responseDataset.map((data, index) => (\r\n            <option key={index} value={data.inputs.english}>\r\n              {data.inputs.english}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        </div>\r\n      </UserInputSpriteWrapper>\r\n      <BotResponse response={getBotResponse(userInput, userInput)} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n\r\nconst Container = styled.div` \r\nfont-family: Roboto Condensed;      \r\ndisplay: flex;\r\nflex-direction: row;\r\n      flex-wrap: nowrap;    \r\n      align-items: center;\r\n      justify-content: center;\r\n      background: linear-gradient(131deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%), center center / cover;\r\n      height: 765px;\r\n    }\r\n    \r\n`;\r\n\r\nconst UserInputSpriteWrapper = styled.div`\r\nfont-family: Roboto Condensed; \r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  flex-direction: column;    \r\n  align-items: left;\r\n  justify-content: left;\r\n  text-align: left;\r\n  border-radius: 0.75rem;\r\n  border: 2px solid darkpurple;\r\n  background: transparent;\r\n  backdrop-filter: blur(50px);\r\n  padding: 25px;\r\n  margin: 20px 50px;\r\n`;","import React from 'react'\r\nimport { Routes, Route, NavLink } from 'react-router-dom'\r\nimport Description from './Description'\r\nimport Words from './mini apps/Words'\r\nimport './English.css'\r\nimport ChatBot from './mini apps/chatbot/ChatBot'\r\n\r\n//Routes to Navigate to Home, Words and conversation\r\n\r\nconst English = () => {\r\n    \r\n  return (\r\n    <div>\r\n      <div className='header'>\r\n        <ul className='navbar'>\r\n          <li className='nav-item'><NavLink exact to=\"/\">{'|'}Home{'|'}</NavLink></li>\r\n          <li className='nav-item'><NavLink to=\"/words\">{'|'}పదాల అర్దాలు{'|'}</NavLink></li>\r\n          <li className='nav-item'><NavLink to=\"/conversation\">{'|'}సంభాషణలు{'|'}</NavLink></li>\r\n        </ul>\r\n      </div>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Description />}/>\r\n          <Route path=\"/words\" element={<Words />}/>\r\n          <Route path=\"/conversation\" element={<ChatBot/>}/>\r\n        </Routes>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default English","import React from 'react';\r\nimport './App.css';\r\nimport English from './English/English';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <English />      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}